---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

// Fetch all blog posts
const allBlogPosts = await getCollection("blog");
const sortedBlogPosts = allBlogPosts.sort(
  (a, b) =>
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

// Get featured post (most recent)
const featuredPost = sortedBlogPosts[0];
// Get remaining posts for the grid
const gridPosts = sortedBlogPosts.slice(1);
---

<Layout title="Blog - Latest Posts">
  <div class="py-16 bg-gray-50 dark:bg-gray-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h1
          class="text-4xl font-extrabold text-gray-900 dark:text-white sm:text-5xl"
        >
          Blog
        </h1>
        <p class="mt-4 text-xl text-gray-500 dark:text-gray-400">
          Thoughts, insights, and tutorials from my development journey
        </p>
      </div>

      <!-- Featured Post -->
      {
        featuredPost && (
          <div class="mt-12">
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
              <div class="md:flex">
                <div class="md:w-1/3">
                  <div class="aspect-video md:aspect-square bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
                    {featuredPost.data.heroImage ? (
                      <img
                        src={featuredPost.data.heroImage}
                        alt={featuredPost.data.title}
                        class="w-full h-full object-cover"
                      />
                    ) : (
                      <svg
                        class="w-16 h-16 text-gray-400"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                        />
                      </svg>
                    )}
                  </div>
                </div>
                <div class="md:w-2/3 p-8">
                  <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2">
                    <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs mr-2">
                      Featured
                    </span>
                    <time datetime={featuredPost.data.pubDate.toISOString()}>
                      {featuredPost.data.pubDate.toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })}
                    </time>
                    <span class="mx-2">·</span>
                    <span>8 min read</span>
                  </div>
                  <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
                    {featuredPost.data.title}
                  </h2>
                  <p class="text-gray-600 dark:text-gray-400 mb-6">
                    {featuredPost.data.description}
                  </p>
                  <div class="flex flex-wrap gap-2 mb-4">
                    {featuredPost.data.tags?.map((tag) => (
                      <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-sm rounded-full">
                        {tag}
                      </span>
                    ))}
                  </div>
                  <a
                    href={`/blog/${featuredPost.slug}`}
                    class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200 font-semibold"
                  >
                    Read Article →
                  </a>
                </div>
              </div>
            </div>
          </div>
        )
      }

      <!-- Blog Posts Grid -->
      <div class="mt-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          gridPosts.map((post) => (
            <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
              <div class="aspect-video bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
                {post.data.heroImage ? (
                  <img
                    src={post.data.heroImage}
                    alt={post.data.title}
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <svg
                    class="w-12 h-12 text-gray-400"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    />
                  </svg>
                )}
              </div>
              <div class="p-6">
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2">
                  <time datetime={post.data.pubDate.toISOString()}>
                    {post.data.pubDate.toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </time>
                  <span class="mx-2">·</span>
                  <span>6 min read</span>
                </div>
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
                  {post.data.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-400 mb-4">
                  {post.data.description}
                </p>
                <div class="flex flex-wrap gap-2 mb-4">
                  {post.data.tags?.map((tag) => (
                    <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-sm rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
                <a
                  href={`/blog/${post.slug}`}
                  class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200 font-medium"
                >
                  Read More →
                </a>
              </div>
            </article>
          ))
        }
      </div>

      <!-- Pagination -->
      <div class="mt-12 flex justify-center">
        <nav class="flex items-center space-x-2">
          <button
            class="px-3 py-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200"
            disabled
          >
            Previous
          </button>
          <button class="px-3 py-2 bg-blue-600 text-white rounded-md">1</button>
          <button
            class="px-3 py-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200"
            >2</button
          >
          <button
            class="px-3 py-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200"
            >3</button
          >
          <button
            class="px-3 py-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200"
          >
            Next
          </button>
        </nav>
      </div>
    </div>
  </div>
</Layout>
